server.port=8082

# Disable all logging by default
logging.level.root=OFF
#logging.level.root=DEBUG
# Enable DEBUG level logging for com.other.app package
logging.level.com.other.app=INFO

#fivegcoreprotocol
fivegcoreProtocol=http://
#PFCP fiveGcoreURI_ENDPOINT
fivegcorePfcpUri=/fetch_pfcp_sess_req_resp_stats
#NRF fiveGcoreURI_ENDPOINT
fivegcoreNrfInfoUri=/fetch_nf_info_json
#UPFINFO fiveGcoreURI_ENDPOINT
fivegcoreUpfInfoUri=/fetch_pfcp_status_json
#UeSession fiveGcoreURI_ENDPOINT
fivegcoreSessionfileJsonUri=/get_statfile_buffer_json/
#UEHISTORY and UeSession common fiveGcoreURI_ENDPOINT
fivegcoreUeHistoryandsessionfileListUri=/get_stat_archive_filelist_json
 
fivegcoreUePduCauseInfoUri=/fetch_ue_stat_info_json
fivegcoreUeHistoryUri=/get_ue_statfile_buffer_json/
#DELETE UE-statfile of fiveGcore URI_ENDPOINT
deletestatfilejson=/delete_statfile_json/
#UPGERROR fiveGcoreURI_ENDPOINT
fivegcoreUpgError=/if-combine-error
fivegcoreUpgservice=/if-combine-stat
#ALERTDATA fiveGcoreURI_ENDPOINT
fivegcoreAlertData=/get_alarm_buffer_json
#ALARMDELETE fiveGcoreURI_ENDPOINT
fivegcoreAlarmDelete=/sub_alarm_id_delete_json
#GNBHISTORY fiveGcoreURI_ENDPOINT
fivegcoreGnbInfo=/fetch_gnb_stat_info_json
#LIVE DATA COLLECTOR  fiveGcoreURI_ENDPOINT(Gnb)
fivegcoreGnbStatsCollector=/fetch_gnb_ue_list_json
fivegcoreGnbUeCountLiveData=/total_gnb_ue_count_json
#LOG DATA COLLECTOR  fiveGcoreURI_ENDPOINT
fivegCoreLogData=/fetch_log_file
#POSTLOG LEVEL   fiveGcoreURI_ENDPOINT
fivegCorePostLogLevel=/set_log_level
#THROUHPUT DATA COLLECTOR  fiveGcoreURI_ENDPOINT
fivegcoreThroughputCollector=/get_throughput_data_json
 
#updatedAgent IP
updater.agent.ip=192.168.0.24
#updatedAgentPortNo
updatedAgentPortNo=8089


 
 
#Agent Configuration for Sync Data to controller
protocol.SyncDataTo.Controller=http
 
#Windows Yaml File Path for getting list of Yaml
filelistpath=C:\\Updated-Yaml
#Linux Yaml File Path
#filelistpath=/niral_config/yaml
 
#file Path for reading yaml in window
filelistpath.for.readYaml=C:\\Updated-Yaml\\
#file Path for reading yaml in Linux
#filelistpath.for.readYaml=/niral_config/yaml/
 
 
 
 
#Mysql Configuration
#Spring JPA
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/backend_db?allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root
 
#Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.thymeleaf.check-template-location=false
spring.jpa.open-in-view=false
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.time-between-eviction-runs-millis=1800000
spring.datasource.tomcat.validation-query=SELECT 1
eureka.client.register-with-eureka=true
eureka.client.fetchRegistry=true
eureka.instance.prefer-ip-address=true
spring.cloud.discovery.enabled=true
 
# Enable Swagger UI
springfox.documentation.swagger-ui.enabled=true
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
#spring.mvc.pathmatch.matching-strategy=ant_path_matcher
#windows
 location=C:\\logfile/
 downloadfilepath=C:\\logfile\\
 logfilelistpath=C:\\logfile
#linuxlogfile path
#location=/home/rahul/niral_config/db/logs/
#downloadfilepath=/home/rahul/niral_config/db/logs/
#logfilelistpath=/home/rahul/niral_config/db/logs
 
#Mongo Configuration
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=niralos
#Subscriber Page Imsi Value Configuration
subscriber.value=00
 
#Docker N2,N3 and GatewayIp
docker.n2ip=192.168.0.164
docker.n3ip=192.168.0.165
docker.gatewayip=192.168.0.1
docker.versionof.fivegcore=niralos-2.2.2
docker.engine.ip=192.168.0.18
docker.engine.port=2375
vm.pathName.configuration=rahul
#Jwt Configuration
jwt.expirationDateInMs=24000000
jwt.refreshExpirationDateInMs=26297460
jwt.secret = ZmAnN71qRH
spring.datasource.initialization-mode=always
 
 
#Edge Time Out
edge.hyerpvisor.time=15000
edge.vm.time=10000
edge.alert.time=10000
edge.delete.time=30000
edge.log.time=6000
edge.task.log.time=8000
 
#Kafka-Configuration
#spring.kafka.bootstrap-servers=localhost:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.group-id=my_group_id
#spring.kafka.consumer.properties.spring.json.trusted.packages=*
#spring.kafka.consumer.max.poll.interval.ms=600000

#proxmox
proxmox.api.url=https://192.168.0.8:8006/api2/json
